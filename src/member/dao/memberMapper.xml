<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="memberSQL">
	<!-- DB 컬럼과 DTO의 이름이 다를 때 -->
	<resultMap id="userResult" type="member"> <!-- user는 user.bean.UserDTO -->
		<result property="name" column="NAME"/> <!-- 앞이 DTO 뒤가 DB -->
		<result property="id" column="ID"/>
		<result property="pwd" column="PWD"/>
		<result property="gender" column="GENDER"/>
		<result property="email1" column="EMAIL1"/>
		<result property="email2" column="EMAIL2"/>
		<result property="tel1" column="TEL1"/>
		<result property="tel2" column="TEL2"/>
		<result property="tel3" column="TEL3"/>
		<result property="zipcode" column="ZIPCODE"/>
		<result property="addr1" column="ADDR1"/>
		<result property="addr2" column="ADDR2"/>
		<result property="logtime" column="LOGTIME"/>
		
	</resultMap>


	<insert id="write" parameterType="member"> <!-- parameterType:타입을내놔라 -->
		insert into member values(#{name},#{id},#{pwd},#{gender},
								  #{email1},#{email2},#{tel1},#{tel2},
								  #{tel3},#{zipcode},#{addr1},#{addr2},#{logtime}) <!-- 같은 이름 찾아가라고 mapping하기 -->
	</insert>
	
	<update id="modify" parameterType="member">
		update member set name=#{name}, pwd=#{pwd}, gender=#{gender}, 
						  email1=#{email1}, email2=#{email2}, tel1=#{tel1}, 
						  tel2=#{tel2}, tel3=#{tel3}, zipcode=#{zipcode}, 
						  addr1=#{addr1}, addr2=#{addr2}, logtime=#{logtime} 
						  where id=#{id}
	</update>
	
	<select id="login" parameterType="java.util.Map" resultType="member"> <!-- 1행의 데이터를 어디에 담을 것인지 알려주기 -->
		select * from member where id=#{id} and pwd=#{pwd}
	</select>
	
	<select id="isExistId" parameterType="String" resultType="member">
		select * from member where id=#{id}
	</select>
	
	<select id="getMember" parameterType="String" resultType="member">
		select * from member where id=#{id}
	</select>
	

</mapper>